{"version":3,"sources":["Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","textRef","useRef","useState","resp","setResp","disabled","setDisabled","handleSubmit","e","a","preventDefault","d","text","current","value","requestOptions","method","headers","body","JSON","stringify","fetch","res","onSubmit","className","ref","placeholder","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAuCeA,MArCf,WACC,IAAMC,EAAUC,mBAChB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACpBD,EAAEE,iBACFJ,GAAY,GACZF,EAAQ,IACFO,EAAI,CACTC,KAAMZ,EAAQa,QAAQC,OAEjBC,EAAiB,CACtBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUT,IAVF,SAYJU,MAAM,sCAAuCN,GAZzC,cAYhBO,EAZgB,iBAcRA,EAAIV,OAdI,QAcpBU,EAdoB,OAepBlB,EAAQkB,GACRhB,GAAY,GAhBQ,4CAAH,sDAkBlB,OACC,gCACC,uBAAMiB,SAAUhB,EAAciB,UAAU,OAAxC,UACC,0BAAUA,UAAU,MAAMC,IAAKzB,EAAS0B,YAAY,eAGpD,wBAAQF,UAAU,MAAMG,KAAK,SAAStB,SAAUA,EAAhD,uBAID,qBAAKmB,UAAU,MAAf,SAAsBrB,QClBVyB,MAbf,WACC,OACC,sBAAKJ,UAAU,MAAf,UACC,6CACA,qBAAKA,UAAU,UAAf,SACC,qBAAKA,UAAU,iBAAf,SACC,cAAC,EAAD,YCGUK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.e357a234.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nfunction Form() {\r\n\tconst textRef = useRef();\r\n\tconst [resp, setResp] = useState(\"\");\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetDisabled(true);\r\n\t\tsetResp(\"\");\r\n\t\tconst d = {\r\n\t\t\ttext: textRef.current.value,\r\n\t\t};\r\n\t\tconst requestOptions = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(d),\r\n\t\t};\r\n\t\tlet res = await fetch(\"https://api.myserenity.live/predict\", requestOptions);\r\n\r\n\t\tres = await res.text();\r\n\t\tsetResp(res);\r\n\t\tsetDisabled(false);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSubmit} className=\"form\">\r\n\t\t\t\t<textarea className=\"inp\" ref={textRef} placeholder=\"Enter text\" />\r\n\t\t\t\t{/* <input className=\"inp\" type=\"\" ref={textRef} />\r\n\t\t\t\t<br /> */}\r\n\t\t\t\t<button className=\"btn\" type=\"submit\" disabled={disabled}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t\t<div className=\"res\">{resp}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n","import \"./App.css\";\r\nimport Form from \"./Components/Form\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>NLP Project</h1>\r\n\t\t\t<div className=\"form_bg\">\r\n\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t<Form />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}